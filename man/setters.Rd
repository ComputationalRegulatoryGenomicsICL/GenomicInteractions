% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{setters}
\alias{FDR<-}
\alias{FDR<-,GenomicInteractions-method}
\alias{description<-}
\alias{description<-,GenomicInteractions-method}
\alias{name<-}
\alias{name<-,GenomicInteractions-method}
\alias{normalisedCount<-}
\alias{normalisedCount<-,GenomicInteractions-method}
\alias{pValue<-}
\alias{pValue<-,GenomicInteractions-method}
\alias{setters}
\title{Functions to set data held in a GenomicInteractions object.}
\usage{
name(GIObject) <- value

description(GIObject) <- value

pValue(GIObject) <- value

FDR(GIObject) <- value

normalisedCount(GIObject) <- value

\S4method{name}{GenomicInteractions}(GIObject) <- value

\S4method{normalisedCount}{GenomicInteractions}(GIObject) <- value

\S4method{pValue}{GenomicInteractions}(GIObject) <- value

\S4method{FDR}{GenomicInteractions}(GIObject) <- value

\S4method{description}{GenomicInteractions}(GIObject) <- value
}
\arguments{
\item{GIObject}{A GenomicInteractions object}

\item{value}{A vector to replace a slot in the object}
}
\value{
GenomicInteractions object
}
\description{
Use these functions to set data stored in each of the slots of a
GenomicInteractions object.
}
\examples{
library(BSgenome.Mmusculus.UCSC.mm9)
anchor.one = GRanges(c("chr1", "chr1", "chr1", "chr1"), IRanges(c(10, 20, 30, 20), width=5), seqlengths=seqlengths(Mmusculus))
anchor.two = GRanges(c("chr1", "chr1", "chr1", "chr2"), IRanges(c(100, 200, 300, 50), width=5), seqlengths=seqlengths(Mmusculus))
test <- new("GenomicInteractions", experiment_name="test", description="this is a test",
                 genome_name="BSgenome.Mmusculus.UCSC.mm9", anchor_one = anchor.one,
                 anchor_two = anchor.two, counts=as.integer(c(2,1,2,3)) )

name(test) <- "Mouse test"
name(test)

description(test) <- "This is a test using the mouse genome"
description(test)

pValue(test) = c(0.1, 0.3, 0.1, 0.08)
pValue(test)

FDR(test) = p.adjust(pValue(test), "bonferroni")
FDR(test)

normalisedCount(test) = count(test) / sum(test)
normalisedCount(test)
}

